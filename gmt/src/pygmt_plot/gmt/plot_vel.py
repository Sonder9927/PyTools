import pandas as pd
from pathlib import Path
import pygmt

from .gmt_make_data import make_topos, tomo_grid_data, get_info
from .gmt_fig import fig_vel, fig_tect_and_sta, fig_htopo


def gmt_plot_vel(topos, vels, fname):
    # gmt plot
    fig = pygmt.Figure()
    # define figure configuration
    pygmt.config(
        MAP_FRAME_TYPE="plain",
        MAP_TITLE_OFFSET="0.25p",
        MAP_DEGREE_SYMBOL="none",
        FONT_TITLE="18",
    )

    # plot vel fig
    title = Path(fname).stem
    # position of stations
    sta = pd.read_csv(
        "src/txt/station.lst",
        usecols=[1, 2],
        index_col=None,
        header=None,
        delim_whitespace=True,
    )
    fig = fig_vel(fig, topos, vels, title, sta)
    # plot colorbar
    fig.colorbar(
        cmap=vels["cpt"],
        position="jBC+w5c/0.4c+o0c/-1.5c+m",
        frame="xa0.1f0.1",
    )

    fig.savefig(fname)


def plot_vel(grid, region, fig_name, series=None) -> None:
    # cpt file
    cptvel = "temp/temp.cpt"
    if series is None:
        series = get_info(grid)
        avg = sum(series) / 2
        dev = min(abs(i - avg) for i in series)
        series = [avg - dev, avg + dev, 0.05]
    # make cpt file
    pygmt.makecpt(
        cmap="src/txt/cptfiles/Vc_1.8s.cpt",
        series=series,
        background=True,
        continuous=True,
        output=cptvel,
    )

    # make vel grid and get vel grid generated by `surface`
    vel_grd = "temp/vel_tpwt.grd"
    tomo_grid_data(grid, vel_grd, region)

    # topo file
    topo = r"01m"
    topos = make_topos(topo, region, normalize="e0.5", resolution=topo)

    # gmt plot
    gmt_plot_vel(topos, {"grd": vel_grd, "cpt": cptvel}, fig_name)


def plot_as(velf, stdf, region, fn) -> None:
    # make vel grid and get vel grid generated by `surface`
    grd = pd.read_csv(
        velf, delim_whitespace=True, names=["x", "y", "z"], header=None
    )
    mm = grd.z.mean()
    grd["z"] = (grd["z"] - mm) / mm * 100
    vel_grd = "temp/temp_vel.grd"
    tomo_grid_data(grd, vel_grd, region)
    std_grd = "temp/temp_std.grd"
    tomo_grid_data(stdf, std_grd, region)
    sta = pd.read_csv(
        "src/txt/station.lst",
        usecols=[1, 2],
        index_col=None,
        header=None,
        delim_whitespace=True,
    )
    topos = make_topos("ETOPO1", region)
    # gmt plot
    gmt_plot_as(topos, vel_grd, std_grd, fn, sta=sta)


def gmt_plot_as(topos, vel, std, fn, sta=None):
    fig = pygmt.Figure()
    pygmt.config(
        MAP_FRAME_TYPE="plain",
        MAP_TITLE_OFFSET="0.25p",
        MAP_DEGREE_SYMBOL="none",
        FONT_TITLE="18",
    )
    with fig.subplot(
        nrows=1, ncols=2, figsize=("15c", "8c"), autolabel=True, margins="0.5c"
    ):
        scale = "M?"
        with fig.set_panel(panel=0):
            fig = fig_htopo(fig, topos, sta=sta, scale=scale)
            pygmt.makecpt(
                cmap="src/txt/cptfiles/Vc_1.8s.cpt", series=[-4.1, 4.1]
            )
            fig.grdimage(
                grid=vel, projection="M?", region=topos["region"], frame="a"
            )
            fig = fig_tect_and_sta(fig, 0, None)
            fig.colorbar(
                frame=["a2f2", 'x+l"TPWT Phase velocity anomaly"', "y+l%"]
            )
        with fig.set_panel(panel=1):
            fig = fig_htopo(fig, topos, sta=sta, scale=scale)
            pygmt.makecpt(cmap="hot", series=[0, 81], reverse=True)
            fig.grdimage(
                grid=std, projection="M?", region=topos["region"], frame="a"
            )
            fig = fig_tect_and_sta(fig, 0, sta)
            fig.colorbar(
                frame=["a20f20", 'x+l"TPWT standard deviation"', "y+lm/s"]
            )
    fig.savefig(fn)
