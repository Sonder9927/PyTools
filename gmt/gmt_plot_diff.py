# Author: Sonder Merak
# Version: 0.1.0
# Description: plot diff between 2 grid files.


from pathlib import Path
import pandas as pd
import pygmt


def make_vel(grid, outfile, region) -> str:
    vel = "temp/vel"
    temp_grd = "temp/temp.grd"
    # blockmean
    pygmt.blockmean(
        data = grid,
        outfile = vel,
        region = region,
        spacing = .5,
    )
    # surface
    pygmt.surface(
        data = vel,
        outgrid = temp_grd,
        region = region,
        spacing = .5,
    )
    # grdsample
    pygmt.grdsample(
        grid = temp_grd,
        spacing = .01,
        outgrid = outfile,
    )

    return vel


def make_topo(topo, region, outfile):
    TOPO_GRD = "temp/topo.grd"
    TOPO_GRD2 = "temp/topo.grd2"
    # grdcut
    pygmt.grdcut(
        grid = topo,
        region = region,
        outgrid = TOPO_GRD,
    )
    # grdsample
    pygmt.grdsample(
        grid =  TOPO_GRD,
        outgrid = TOPO_GRD2,
        region = region,
        spacing = .01,
    )
    # grdgradient
    pygmt.grdgradient(
        grid = TOPO_GRD2,
        outgrid = outfile,
        azimuth = 45,
        normalize = "t",
        verbose = "",
    )


def make_diff(tpwt, ant, region, outfile):
    temp_grd = "temp/temp.grd"
    # make vel diff tpwt grid
    pygmt.surface(
        data = tpwt,
        outgrid = temp_grd,
        region = region,
        spacing = .5
    )
    tpwt = pygmt.grd2xyz(temp_grd)
    # make vel diff ant grid
    pygmt.surface(
        data = ant,
        outgrid = temp_grd,
        region = region,
        spacing = .5
    )
    ant = pygmt.grd2xyz(temp_grd)

    # make diff
    diff = tpwt
    diff.vel = (tpwt.vel - ant.vel) * 1000
    tomo_diff = "temp/tomo_diff.xyz"
    temp_grd = "temp/temp.grd"
    pygmt.blockmean(
        grid = diff,
        region = region,
        spacing = .5,
        outfile = tomo_diff,
    )
    pygmt.surface(
        data = tomo_diff,
        outfile = temp_grd,
        region = region,
        spacing = .5,
    )
    pygmt.grdsample(
        grid = temp_grd,
        region = region,
        spacing = .01,
        outgrid = outfile,
    )


def make_grd(tpwt, ant, region, cptfile, tpwt_grd, ant_grd, diff_grd):
    # make cpt file
    pygmt.makecpt(
        cmap = "seis",
        series = [3.3, 3.8, 0.1],
        background = "",
        continuous = "",
        output = cptfile,
    )

    # make vel grid of tpwt and get vel grid generated by `blockmean` for `make_diff`
    vel = make_vel(tpwt, tpwt_grd, region)
    vel_tpwt = f"{vel}_tpwt"
    Path(vel).rename(vel_tpwt)
    # make vel grid of ant and get vel grid generated by `blockmean` for `make_diff`
    vel= make_vel(ant, ant_grd, region)
    vel_ant = f"{vel}_ant"
    Path(vel).rename(vel_ant)

    # make diff grid
    make_diff(vel_tpwt, vel_ant, region, diff_grd)


def plot_sta(fig, sta):
    # station
    fig.plot(
        data = sta,
        style = "t0.1c",
        fill = "blue",
        pen = "black",
    )
    fig.plot(data="ncc_lv.xy", pen="0.8p,black")

    return fig


def plot_fig(fig, grid, region, scale, title, cpt, topo_gra, sta):
    """
    plot single fig of tpwt or ant
    """
    fig.basemap(
            projection = scale,
            region = region,
            frame = [f'WSne+t"{title}"', "xa2f2", "Bya2f2"]
        )

    fig.coast(shorelines="", resolution="l", land="white", area_thresh=10_000)
    # grdimage
    fig.grdimage(
        grid = grid,
        cmap = cpt,
        shading = topo_gra,
    )

    fig = plot_sta(fig, sta)

    return fig


def plot_diff(fig, diff, region, scale, cpt, topo_gra, sta):
    fig.coast(
        region = region,
        projection = scale,
        frame = ["WSne", "xa2f2", "Bya2f2"],
        shorelines = "",
        resolution = "l",
        land = "white",
        area_thresh = 10_000
    )
    fig.grdimage(grid=diff, cmap=cpt, shading=topo_gra)

    fig = plot_sta(fig, sta)

    # colorbar
    fig.colorbar(cmap=cpt, position="jBC+w8c/0.4c+o0c/-1.5c+m", frame="xa30f30")

    return fig


def gmt_plot(region, cpt, tpwt_grd, ant_grd, diff_grd, topo_gra):
    fig = pygmt.Figure()

    # projection
    x = (region[0] + region[1]) / 2
    y = (region[2] + region[3]) / 2
    SCALE = f"m{x}/{y}/0.3i"
    # position of stations 
    sta = pd.read_csv("src/station.lst",
        usecols=[0, 1], index_col=None, header=None, delim_whitespace=True)

    # gmt plot
    # define figure configuration
    pygmt.config(MAP_FRAME_TYPE="plain", MAP_TPTLE_OFFSET="0.25p",
        MAP_DEGREE_SYMBOL="none", FONT_TITLE="18")

    # plot tpwt fig
    fig = plot_fig(fig, tpwt_grd, region, SCALE, "tpwt", cpt, topo_gra, sta)
    # shift plot origin of the second fig by 12 cm in x direction
    fig.shift_origin(xshift="12c")
    # plot ant fig
    fig = plot_fig(fig, ant_grd, region, SCALE, "ant", cpt, topo_gra, sta)
    # plot colorbar
    fig.colorbar(cmap=cpt, position="jBC+w5c/0.4c+o0c/-1.5c+m", frame="xa0.2f0.2")

    # plot diff
    fig.shift_origin(xshift="-12c", yshift="-10.5c")
    cpt_diff = "src/vs_dif.cpt"
    fig = plot_diff(fig, diff_grd, region, SCALE, cpt_diff, topo_gra, sta)
    # plot average vel info


def gmt_plot_diff(grid_tpwt, grid_ant):
    """
    :grid_tpwt: grid file generated by TPWT
    :grid_tpwt: grid file generated by ANT
    """
    # cpt file
    cptfile = "temp/test.cpt"
    region = [115, 122.5, 27.9, 34.3]
    # grd file
    tpwt_grd = "temp/vel_tpwt.grd"
    ant_grd = "temp/vel_ant.grd"
    diff_grd = "temp/vel_diff.grd"

    make_grd(grid_tpwt, grid_ant, region, cptfile, tpwt_grd, ant_grd, diff_grd)
    # topo file
    TOPO = "src/ETOPO1.grd"
    TOPO_GRA = "temp/topo.gradient"
    make_topo(TOPO, region, TOPO_GRA)

    gmt_plot(region, cptfile, tpwt_grd, ant_grd, diff_grd, TOPO_GRA)


if __name__ == "__main__":
    tpwt = ""
    ant = ""
    #stddev = ""
    gmt_plot_diff(tpwt, ant)

